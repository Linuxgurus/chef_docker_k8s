#!/opt/opscode/embedded/bin/ruby
require 'k8s-client'

FILES={
  pivotal: '/etc/opscode/pivotal.pem',
  private_chef_secrets: '/etc/opscode/private-chef-secrets.json',
}

def build_secret(ns, name, keys)
  {
    apiVersion: 'v1',
    kind: 'Secret',
    metadata: { namespace: ns, name: name, },
    data: keys.map {|k,v| [k,Base64.encode64(v)]}.to_h
  }
end

def read_file(filename)
  Base64.encode64(File.read filename)
end

begin
  client = K8s::Client.in_cluster_config
  secrets = FILES.map {|key, file| [key, read_file(file)] }.to_h
  seq_req = build_secret(ARGV[1], ARGV[2], secrets)
  client.api('v1').resource('secrets').create_resource(seq_req)
end
